-- Database: "Entrant_db"

-- DROP DATABASE "Entrant_db";

CREATE DATABASE "Entrant_db"
  WITH OWNER = postgres
       ENCODING = 'UTF8'
       TABLESPACE = pg_default
       LC_COLLATE = 'Russian_Russia.1251'
       LC_CTYPE = 'Russian_Russia.1251'
       CONNECTION LIMIT = -1;
------------------------------------------

CREATE TABLE public.compensation_type
(
  id integer NOT NULL DEFAULT nextval('compensation_type_id_seq'::regclass),
  title character varying(100),
  CONSTRAINT compensation_type_pkey PRIMARY KEY (id)
)
WITH (
  OIDS=FALSE
);
ALTER TABLE public.compensation_type
  OWNER TO postgres;

 ------------------------------

  CREATE TABLE public.competition
  (
    id integer NOT NULL DEFAULT nextval('competition_id_seq'::regclass),
    formative_orgunit_id integer,
    competition_type_id integer,
    program_form_id integer,
    program_subject_id integer,
    level_type_id integer,
    program_set_ministerial_plan integer,
    program_set_target_adm_plan integer,
    program_set_exclusive_plan integer,
    program_set_contract_plan integer,
    compensation_type_id integer,
    CONSTRAINT competition_pkey PRIMARY KEY (id),
    CONSTRAINT competition_compensation_type_id_fkey FOREIGN KEY (compensation_type_id)
        REFERENCES public.compensation_type (id) MATCH SIMPLE
        ON UPDATE NO ACTION ON DELETE NO ACTION,
    CONSTRAINT competition_competition_type_id_fkey FOREIGN KEY (competition_type_id)
        REFERENCES public.competition_type (id) MATCH SIMPLE
        ON UPDATE NO ACTION ON DELETE NO ACTION,
    CONSTRAINT competition_formative_orgunit_id_fkey FOREIGN KEY (formative_orgunit_id)
        REFERENCES public.formative_orgunit (id) MATCH SIMPLE
        ON UPDATE NO ACTION ON DELETE NO ACTION,
    CONSTRAINT competition_level_type_id_fkey FOREIGN KEY (level_type_id)
        REFERENCES public.level_type (id) MATCH SIMPLE
        ON UPDATE NO ACTION ON DELETE NO ACTION,
    CONSTRAINT competition_program_form_id_fkey FOREIGN KEY (program_form_id)
        REFERENCES public.program_form (id) MATCH SIMPLE
        ON UPDATE NO ACTION ON DELETE NO ACTION,
    CONSTRAINT competition_program_subject_id_fkey FOREIGN KEY (program_subject_id)
        REFERENCES public.program_subject (id) MATCH SIMPLE
        ON UPDATE NO ACTION ON DELETE NO ACTION
  )
  WITH (
    OIDS=FALSE
  );
  ALTER TABLE public.competition
    OWNER TO postgres;

    -------------------------------------

    CREATE TABLE public.competition_type
    (
      id integer NOT NULL DEFAULT nextval('competition_type_id_seq'::regclass),
      title character varying(100),
      CONSTRAINT competition_type_pkey PRIMARY KEY (id)
    )
    WITH (
      OIDS=FALSE
    );
    ALTER TABLE public.competition_type
      OWNER TO postgres;
------------------------------------------

CREATE TABLE public.discipline
(
  id integer NOT NULL DEFAULT nextval('discipline_id_seq'::regclass),
  title character varying(20),
  CONSTRAINT discipline_pkey PRIMARY KEY (id)
)
WITH (
  OIDS=FALSE
);
ALTER TABLE public.discipline
  OWNER TO postgres;

  -----------------------------

  CREATE TABLE public.edu_document_kind
  (
    id integer NOT NULL DEFAULT nextval('edu_document_kind_id_seq'::regclass),
    title character varying(100),
    CONSTRAINT edu_document_kind_pkey PRIMARY KEY (id)
  )
  WITH (
    OIDS=FALSE
  );
  ALTER TABLE public.edu_document_kind
    OWNER TO postgres;
    -------------------------------------

    CREATE TABLE public.entrant_competition
    (
      entrantid integer,
      competition_id integer,
      priority integer,
      accepted integer,
      CONSTRAINT entrant_competition_competition_id_fkey FOREIGN KEY (competition_id)
          REFERENCES public.competition (id) MATCH SIMPLE
          ON UPDATE NO ACTION ON DELETE NO ACTION,
      CONSTRAINT entrant_competition_entrant_id_fkey FOREIGN KEY (entrantid)
          REFERENCES public.entrant_data (id) MATCH SIMPLE
          ON UPDATE NO ACTION ON DELETE NO ACTION
    )
    WITH (
      OIDS=FALSE
    );
    ALTER TABLE public.entrant_competition
      OWNER TO postgres;
----------------------------

CREATE TABLE public.entrant_data
(
  id integer NOT NULL DEFAULT nextval('entrant_data_id_seq'::regclass),
  first_name character varying(20),
  last_name character varying(20),
  middle_name character varying(20),
  birth_date date,
  citizenship character varying(20),
  edu_document_number integer,
  edu_document_average_mark integer,
  edu_document_kind_id integer,
  CONSTRAINT entrant_data_pkey PRIMARY KEY (id),
  CONSTRAINT entrant_data_edu_document_kind_id_fkey FOREIGN KEY (edu_document_kind_id)
      REFERENCES public.edu_document_kind (id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
)
WITH (
  OIDS=FALSE
);
ALTER TABLE public.entrant_data
  OWNER TO postgres;

  -----------------------------------

  CREATE TABLE public.exam_entrant
  (
    entrant_id integer,
    discipline_id integer,
    mark integer,
    CONSTRAINT exam_entrant_discipline_id_fkey FOREIGN KEY (discipline_id)
        REFERENCES public.discipline (id) MATCH SIMPLE
        ON UPDATE NO ACTION ON DELETE NO ACTION,
    CONSTRAINT exam_entrant_entrant_id_fkey FOREIGN KEY (entrant_id)
        REFERENCES public.entrant_data (id) MATCH SIMPLE
        ON UPDATE NO ACTION ON DELETE NO ACTION
  )
  WITH (
    OIDS=FALSE
  );
  ALTER TABLE public.exam_entrant
    OWNER TO postgres;
    ---------------------

    CREATE TABLE public.formative_orgunit
    (
      id integer NOT NULL DEFAULT nextval('formative_orgunit_id_seq'::regclass),
      full_title character varying(100),
      short_title character varying(20),
      CONSTRAINT formative_orgunit_pkey PRIMARY KEY (id)
    )
    WITH (
      OIDS=FALSE
    );
    ALTER TABLE public.formative_orgunit
      OWNER TO postgres;

      --------------------------------

      CREATE TABLE public.level_type
      (
        id integer NOT NULL DEFAULT nextval('level_type_id_seq'::regclass),
        title character varying(100),
        CONSTRAINT level_type_pkey PRIMARY KEY (id)
      )
      WITH (
        OIDS=FALSE
      );
      ALTER TABLE public.level_type
        OWNER TO postgres;
---------------------

CREATE TABLE public.program_form
(
  id integer NOT NULL DEFAULT nextval('program_form_id_seq'::regclass),
  title character varying(100),
  CONSTRAINT program_form_pkey PRIMARY KEY (id)
)
WITH (
  OIDS=FALSE
);
ALTER TABLE public.program_form
  OWNER TO postgres;
  ---------------------------

  CREATE TABLE public.program_subject
  (
    id integer NOT NULL DEFAULT nextval('program_subject_id_seq'::regclass),
    code character varying(10),
    title character varying(100),
    CONSTRAINT program_subject_pkey PRIMARY KEY (id)
  )
  WITH (
    OIDS=FALSE
  );
  ALTER TABLE public.program_subject
    OWNER TO postgres;
-----------------------------------------

CREATE TABLE public.users
(
  id integer NOT NULL DEFAULT nextval('users_id_seq'::regclass),
  name character varying(20),
  password character varying(100),
  CONSTRAINT users_pkey PRIMARY KEY (id)
)
WITH (
  OIDS=FALSE
);
ALTER TABLE public.users
  OWNER TO postgres;